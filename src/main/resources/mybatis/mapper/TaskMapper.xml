<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.augurit.awater.dao.TaskMapper">
    <sql id="allColumns_task">
        id,
        task_name  taskName,
        creator_id creatorId,
        creator_name creatorName,
        reciever_ids recieverIds,
        min_customer_num minCustomerNum,
        real_customer_num realCustomerNum,
        claim_type claimType,
        publish_status publishStatus,
        published_status publishedStatus,
        claim_status claimStatus,
        complish_status complishStatus,
        create_time createTime
    </sql>

    <sql id="allColumns_task_detail">
        id,
        task_id  taskId,
        reciever_id recieverId,
        reciever_name recieverName,
        customer_id customerId,
        customer_name customerName,
        saler_id salerId,
        saler_name salerName,
        saler_tm_name salerTMName,
        task_num taskNum,
        task_detail_name taskDetailName,
        task_desc taskDesc,
        task_unit_price taskUnitPrice,
        task_total_price taskTotalPrice,
        total_commission totalCommission,
        customer_commission customerCommission,
        status,
        old_status oldStatus,
        create_time createTime
    </sql>

    <select id="getTaskInstance" resultType="TaskInstance">
        select <include refid="allColumns_task" /> from tb_task where id = #{id}
    </select>

    <insert id="saveTaskInstance" parameterType="TaskInstance">
        insert into tb_task(id, task_name, creator_id, creator_name, reciever_ids, min_customer_num, real_customer_num, claim_type, publish_status, published_status, claim_status, complish_status, create_time)
        values(#{id}, #{taskName}, #{creatorId}, #{creatorName}, #{recieverIds}, #{minCustomerNum}, #{realCustomerNum}, #{claimType}, #{publishStatus}, #{publishedStatus}, #{claimStatus}, #{complishStatus}, #{createTime})
    </insert>

    <insert id="publishTaskInstance"></insert>

    <select id="findTaskInstanceList" resultType="TaskInstance">
        select <include refid="allColumns_task" /> from tb_task where 1 = 1
        <if test="creatorId != '' and creatorId != null">
            and creator_id = #{creatorId}
        </if>
        <if test="recieverId != '' and recieverId != null">
            and reciever_ids like concat('%', #{recieverId}, '%')
        </if>
        <if test="taskName != '' and taskName != null">
            and task_name like concat('%', #{taskName}, '%')
        </if>
    </select>

    <update id="updateTaskInstance" parameterType="TaskInstance">
        update tb_task
        <set>
            <if test="taskName != null">
                task_name = #{taskName},
            </if>
            <if test="recieverIds != null">
                reciever_ids = #{recieverIds},
            </if>
            <if test="minCustomerNum != null">
                min_customer_num = #{minCustomerNum},
            </if>
            <if test="realCustomerNum != null">
                real_customer_num = #{realCustomerNum},
            </if>
            <if test="publishStatus != null">
                publish_status = #{publishStatus},
            </if>
            <if test="publishedStatus != null">
                published_status = #{publishedStatus},
            </if>
            <if test="claimType != null">
                claim_type = #{claimType},
            </if>
            <if test="complishStatus != null">
                complish_status = #{complishStatus},
            </if>
            <if test="claimStatus != null">
                claim_status = #{claimStatus},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="abandonTaskInstance" parameterType="TaskInstance">
        update tb_task
        <set>
            publish_status = #{instance.publishStatus},
            published_Status = #{instance.publishedStatus},
        </set>
        where id = #{id}
    </update>

    <delete id="delTaskInstance">
        delete from tb_task where id = #{id}
    </delete>

    <select id="findTaskDetailList" resultType="TaskDetail">
        select <include refid="allColumns_task_detail" />
        from tb_task_detail where task_id = #{instanceId}
        <if test="taskDetailName != '' and taskDetailName != null">
            and task_detail_name like concat('%', #{taskDetailName}, '%')
        </if>
    </select>

    <insert id="saveTaskDetail" parameterType="TaskDetail">
        insert into tb_task_detail(id, task_id, reciever_id, reciever_name, customer_id, customer_name, saler_id, saler_name, saler_tm_name, task_num, task_detail_name,
          task_desc, task_url, task_unit_price, task_total_price, total_commission, customer_commission, status, create_time)
        values(#{id}, #{taskId}, #{recieverId}, #{recieverName}, #{customerId}, #{customerName}, #{salerId}, #{salerName}, #{salerTMName}, #{taskNum}, #{taskDetailName},
          #{taskDesc}, #{taskUrl}, #{taskUnitPrice}, #{taskTotalPrice}, #{totalCommission}, #{customerCommission}, #{status}, #{createTime})
    </insert>

    <insert id="saveTaskDetailBatch">
        insert into tb_task_detail(id, task_id, customer_id, customer_name, saler_id, saler_name, saler_tm_name, task_num, task_detail_name,
        task_desc, task_url, task_unit_price, task_total_price, total_commission, customer_commission, status, create_time)
        values
        <foreach collection="details" item="detail" separator=",">
            (#{detail.id}, #{detail.taskId}, #{detail.customerId}, #{detail.customerName}, #{detail.salerId},
            #{detail.salerName}, #{detail.salerTMName}, #{detail.taskNum}, #{detail.taskDetailName},
            #{detail.taskDesc}, #{detail.taskUrl}, #{detail.taskUnitPrice}, #{detail.taskTotalPrice}, #{detail.totalCommission},
            #{detail.customerCommission}, #{detail.status}, #{detail.createTime})
        </foreach>
    </insert>

    <update id="updTaskDetail" parameterType="TaskDetail">
        update tb_task_detail
        <set>
            <if test="customerId != null and customerId != ''">
                customer_id = #{customerId},
                customer_name = #{customerName},
            </if>
            <if test="recieverId != null and recieverId != ''">
                reciever_id = #{recieverId},
                reciever_name = #{recieverName},
            </if>
            <if test="salerId != null and salerId != ''">
                customer_id = #{customerId},
                saler_name = #{salerName},
            </if>
            <if test="taskNum != null">
                task_num = #{taskNum},
            </if>
            <if test="taskDetailName != null">
                task_detail_name = #{taskDetailName},
            </if>
            <if test="taskDesc != null">
                task_desc = #{taskDesc},
            </if>
            <if test="taskUnitPrice != null">
                task_unit_price = #{taskUnitPrice},
            </if>
            <if test="taskTotalPrice != null">
                task_total_price = #{taskTotalPrice},
            </if>
            <if test="totalCommission != null">
                total_commission = #{totalCommission},
            </if>
            <if test="customerCommission != null">
                customer_commission = #{customerCommission},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        where id=#{id}
    </update>

    <delete id="delTaskDetail">
        delete from tb_task_detail where 1=1
        <if test="ids != null">
            and id in
            <foreach collection="ids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        <if test="instanceId != null and instanceId != ''">
            and task_id = #{instanceId}
        </if>
    </delete>

    <update id="abandonTaskDetail">
        update tb_task_detail
        set status = #{detail.status},
          old_status = #{detail.oldStatus}
        where id = #{detail.id}
    </update>
    
    <delete id="delTaskDetailFiles">
        delete from tb_task_detail
        where detail_id = #{detailId}
        and file_id in
        <foreach collection="fileIds" item="fileId" separator="," open="(" close=")">
            #{fileId}
        </foreach>
    </delete>
</mapper>